webapps에 index.jsp파일을 생성한다.

<body>
	JSP Index Page
</body>
이때 에러가 나오는데 javax.servlet.http.HttpServlet 이라는 라이브러리를 찾을 수 없다고 나온다.
라이브러리를 설정해줘야 한다.

첫 번째는 라이브러리 파일위치를 설정하는 방법이있다.
프로젝트 우클릭 > Build Path > Libraries탭를 보면 기본 자바 라이브러리가 저장된 빌드패스가
있고 Maven 라이브러리가 저장된 빌드패스가 있다.
Add Library 클릭 > Server Runtime > Next > Apache Tomcat v9.0클릭 > Finish
톰캣라이브러리를 사용한다는 의미이다. 즉, 톰캣자체가 서블릿과 jsp관련된 라이브러리가 
포함되어 있다.

만약에 이렇게 라이브러리 빌드패스를 설정하면 문제가 있다. 예를 들어 이 프로젝트를
다른 컴퓨터 환경에서 개발하려고 하면 똑같이 라이브러리가 로컬컴퓨터에 설치
되어 있어야 한다. 또한 컴퓨터마다 라이브러리 절대경로가 다를 수 있다.

두 번째 방법은 Maven의 라이브러리 관리에 있어서 강력한 기능을 제공한다.
pom.xml에서 <dependency></dependency>태그 안에 라이브러리를 추가해주면 
알아서 다운로드 해준다.

Maven저장소에서 다운을 해주는데 Maven저장소에서는 라이브러리들도 있고
다른 archtecType의 프로젝트가 될 수도 있고 jar나 war파일들도 있다.

이러한 라이브러리는 사용자 로컬PC의 $user.home\.m2\repository라는 디렉터리에 
저장된다.

필요한 라이브러리를 추가하는 방법은 먼저 저장소로 들어간다.

mvnrepository.com > 라이브러리 검색 > tomcat jsp 검색 > Tomcat JSP API 클릭 >
톰캣버전으로 JSP라이브러리가 나온다. 버전 클릭 > 
Maven 내용을 클릭하면 저절로 복사된다. > pom.xml <dependancy>태그안에 붙여넣기 >
저장하기 

이때 maven은 의존성있는 라이브러리까지 알아서 다운로드해준다.

이제 다시 jsp파일로 오면 에러가 사라진다.
EL을 이용해본다.

${3+4} 

실행하면 웹에서 7을 확인할 수 있다.